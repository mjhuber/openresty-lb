user root;
worker_processes 4;
pid /var/run/nginx.pid;
env DD_PROD;
env DD_PROD_PORT;
env DD_CANDIDATE;
env DD_CANDIDATE_PORT;

events {
    worker_connections 4096;
}

http {
    error_log stderr warn;
    access_log /dev/stdout;
}

stream {
    init_by_lua_block {
        ngx.log(ngx.ERR, "hello")
        local resty_roundrobin = require "resty.roundrobin"
    }
    upstream candidate {
        server 0.1.2.3:1234; # just an invalid address as a place holder

        balancer_by_lua_block {          
          local balancer = require "ngx.balancer"
          local ok, err = balancer.set_current_peer(os.getenv("DD_CANDIDATE"),os.getenv("DD_CANDIDATE_PORT"))
          if not ok then
              ngx.log(ngx.ERR, "failed to set the current peer: ", err)
              return ngx.exit(ngx.ERROR)
          end
        }
    }

    upstream prod {
        server 0.0.0.1:1234; # just an invalid address as a place holder

        balancer_by_lua_block {
          local balancer = require "ngx.balancer"
          local ok, err = balancer.set_current_peer(os.getenv("DD_PROD"),os.getenv("DD_PROD_PORT"))
          if not ok then
              ngx.log(ngx.ERR, "failed to set the current peer: ", err)
              return ngx.exit(ngx.ERROR)
          end
        }
    }

    split_clients "${time_local}" $cluster {
                  50%                candidate;
                  50%                     prod;
    }

    server {
        listen 80;
        proxy_pass $cluster;
    }
}
